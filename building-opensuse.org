# -*- org-confirm-babel-evaluate: nil; -*-
#+AUTHOR: Dan ƒåerm√°k
#+DATE: November 13, 2024
#+EMAIL: dcermak@suse.com
#+TITLE: How openSUSE is built
#+SUBTITLE: From source code to an installation disk

#+REVEAL_ROOT: ./node_modules/reveal.js/
#+REVEAL_THEME: simple
#+REVEAL_PLUGINS: (highlight notes history)
#+OPTIONS: toc:nil
#+REVEAL_DEFAULT_FRAG_STYLE: appear
#+REVEAL_INIT_OPTIONS: transition: 'none', hash: true
#+OPTIONS: num:nil toc:nil center:nil reveal_title_slide:nil
#+REVEAL_EXTRA_CSS: ./node_modules/@fortawesome/fontawesome-free/css/all.min.css
#+REVEAL_EXTRA_CSS: ./custom-style.css
#+REVEAL_HIGHLIGHT_CSS: ./node_modules/reveal.js/plugin/highlight/zenburn.css

#+REVEAL_TITLE_SLIDE: <h2 class="title">%t</h2>
#+REVEAL_TITLE_SLIDE: <p class="subtitle" style="color: Gray;">%s</p>
#+REVEAL_TITLE_SLIDE: <p class="author">%a</p>
#+REVEAL_TITLE_SLIDE: <div style="float:left"><a href="https://more.suse.com/openhousecz" target="_blank"><img src="./media/SUSE_Logo-hor_L_Green-pos_sRGB.svg" height="50px" style="margin-bottom:-12px"/>&nbsp SUSE Open House</a></div>
#+REVEAL_TITLE_SLIDE: <div style="float:right;font-size:35px;"><p xmlns:dct="http://purl.org/dc/terms/" xmlns:cc="http://creativecommons.org/ns#"><a href="https://creativecommons.org/licenses/by/4.0" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">
#+REVEAL_TITLE_SLIDE: CC BY 4.0 <i class="fab fa-creative-commons"></i> <i class="fab fa-creative-commons-by"></i></a></p></div>

* who -u

Dan ƒåerm√°k

@@html: <div style="float:center">@@
@@html: <table class="who-table">@@
@@html: <tr><td><i class="fab fa-suse"></i></td><td> Software Developer @SUSE, SLE BCI Releng</td></tr>@@
@@html: <tr><td><i class="far fa-heart"></i></td><td> Developer Tools, Testing and Documentation, Home Automation</td></tr>@@
@@html: <tr></tr>@@
@@html: <tr></tr>@@
@@html: <tr><td><i class="fa-solid fa-globe"></i></td><td> <a href="https://dancermak.name/">https://dancermak.name</a></td></tr>@@
@@html: <tr><td><i class="fab fa-github"></i></td><td> <a href="https://github.com/dcermak/">dcermak</a></td></tr>@@
@@html: <tr><td><i class="fab fa-mastodon"></i></td><td> <a href="https://mastodon.social/@Defolos">@Defolos@mastodon.social</a></td></tr>@@
@@html: </table>@@
@@html: </div>@@


* Why even build a distribution?

#+begin_notes
A distribution provides:

- integration
- keep packages working with each other
- testing/QE
- installers
- opinionated defaults
#+end_notes

#+ATTR_REVEAL: :frag appear
Just =pip/npm/cargo install= everything!

#+ATTR_REVEAL: :frag appear
#+begin_src shell
$ pip3 install pysqlite3
...
Failed to build pysqlite3
Installing collected packages: pysqlite3
  Running setup.py install for pysqlite3 ... error
  error: subprocess-exited-with-error

  √ó Running setup.py install for pysqlite3 did not run successfully.
#+end_src

#+ATTR_REVEAL: :frag appear
oops ü´†

* From Sources to an Installer

#+begin_notes
- just distributing sources isn't good enough anymore
\rightarrow have to build & distribute binaries
#+end_notes

#+ATTR_REVEAL: :frag appear
A long time ago‚Ä¶

#+ATTR_REVEAL: :frag appear
#+begin_src shell
$ cat INSTALL

BASIC INSTALLATION

On most Unix systems, you build Emacs by first running the
'configure' shell script.  This attempts to deduce the
correct values for various system-dependent variables and
features, and find the directories where certain system
headers and libraries are kept.  In a few cases, you may
need to explicitly tell configure where to find some things,
or what options to use.
#+end_src

#+ATTR_REVEAL: :frag appear
Ain't no body got time for that @@html:&nbsp;@@  (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª


#+REVEAL: split
@@html:<img src="./media/from-source-to-image.svg"/>@@


* It starts with Packages

#+ATTR_REVEAL: :frag (appear)
@@html:<img src="./media/rpm-package.svg"/>@@


* Deliverables

#+ATTR_REVEAL: :frag (appear)
- disk images
- installation ISOs
- container images
- binary packages
- repositories


* Parts of a Build System

#+begin_notes
- RPM building
- repository assembly
- image/container build
- publishing
- package monitoring
- source control
#+end_notes

#+ATTR_REVEAL: :frag (appear)
@@html:<img src="./media/linux-distro-build-pipeline.svg"/>@@


** RPM packages



** Flatpacks

- binaries including all dependencies


** Build system

#+ATTR_REVEAL: :frag (appear)
@@html:<img src="./media/obs-overview.svg"/>@@


** Repository Assembly

#+begin_notes
- only ship what's required
- remove obsolete packages
- patchinfo creation
- deltarpms
#+end_notes

#+ATTR_REVEAL: :frag (appear)
@@html:<img src="./media/repocreate.svg"/>@@


** Testing/QE

#+begin_notes
- test automation performed using openQA

#+end_notes

#+ATTR_REVEAL: :frag (appear)
@@html:<img src="./media/openqa_architecture.svg"/>@@

#+REVEAL: split

@@html:<video id="video" src="./media/o3-test-4621651.webm" controls/>@@



* The Factory Process

#+begin_notes
- how to submit to Factory
#+end_notes

#+ATTR_REVEAL: :frag (appear)
@@html:<img src="./media/factory-process.svg"/>@@


* Questions?

#+ATTR_REVEAL: :frag (appear)
Answers!
